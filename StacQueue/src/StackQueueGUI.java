//I AM NOT A JAVA PROGRAMMER
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Peter
 */
public class StackQueueGUI extends javax.swing.JFrame {

    /**
     * Creates new form StackQueueGUI
     */
    public StackQueueGUI() {
        initComponents();
       jTextField2.setEditable(false);
       jTextArea1.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Peter Martinez Stack/Queue");

        jLabel1.setText("Stack");

        jButton1.setText("Pop");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Queue");

        jButton2.setLabel("Dequeue");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("Queue/Push");
        jButton3.setActionCommand("Queue/Push");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel4.setText("Pop/Dequeue Output");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton1))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextField2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jButton2))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jTextField2)
                            .addComponent(jButton2))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//‘******************************************************
//‘***  jButton3ActionPerformed
//‘***  Peter Martinez
//‘******************************************************
//‘***  Purpose of this method was to provide user with 
//‘***  a way to insert desired data into the link list.
//‘***  Was also done to help me get used to java gui.
//‘***  This method was also used to output all the data
//‘***  entered.
//‘******************************************************
//‘***  9/20/2018
//‘******************************************************
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            Integer.parseInt(jTextField1.getText());
        }
        catch(NumberFormatException ex){
            //not an integer
            jTextArea1.setText("Please enter an integer");
            jTextField1.setText("");
            jTextField1.requestFocusInWindow();
            return;
        }
        String numString = jTextField1.getText();
        int rNum = Integer.parseInt(numString);

        jTextArea1.setText("");
        QSLinkCenter.fillNode(rNum);
        recPrintMe(QSLinkCenter.firstOne);
        System.out.println(" Size = " + QSLinkCenter.size);
        jTextField1.requestFocusInWindow();
    }//GEN-LAST:event_jButton3ActionPerformed
//‘******************************************************
//‘***  jButton2ActionPerformed
//‘***  Peter Martinez
//‘******************************************************
//‘***  Purpose of this method was to provide user with 
//‘***  output displaying the dequeued value.
//‘***  Was also done to help me get used to java gui.
//‘***  ALso put some datatype checking to help prevent
//‘***  incompatible data.
//‘******************************************************
//‘***  9/20/2018
//‘******************************************************
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(QSLinkCenter.isEmpty() != true)
        {
            String dequeueValue = Integer.toString(QSLinkCenter.dequeue());
            jTextField2.setText(dequeueValue);
            jTextArea1.setText("");
            if(QSLinkCenter.firstOne != null)
            {
                recPrintMe(QSLinkCenter.firstOne);
                System.out.println(" Size = " + QSLinkCenter.size);
            }
            else
            {
                jTextArea1.setText("No data");
                jTextField1.requestFocusInWindow();
            }
        }
        else
        {
            jTextArea1.setText("No data");
            jTextField1.requestFocusInWindow();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
//‘******************************************************
//‘***  jButton1ActionPerformed
//‘***  Peter Martinez
//‘******************************************************
//‘***  Purpose of this method was to provide user with 
//‘***  output displaying the popped value.
//‘***  Was also done to help me get used to java gui.
//‘***  ALso put some datatype checking to help prevent
//‘***  incompatible data.
//‘******************************************************
//‘***  9/20/2018
//‘******************************************************
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(QSLinkCenter.isEmpty() != true)
        {
            String popValue = Integer.toString(QSLinkCenter.pop());
            jTextField2.setText(popValue);
            jTextArea1.setText("");
            if(QSLinkCenter.firstOne != null)
            {
                recPrintMe(QSLinkCenter.firstOne);
                System.out.println(" Size = " + QSLinkCenter.size);
            }
            else
            {
                jTextArea1.setText("No data");
                jTextField1.requestFocusInWindow();
            }
        }
        else
        {
            jTextArea1.setText("No data");
            jTextField1.requestFocusInWindow();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
//‘******************************************************
//‘***  recPrintMe
//‘***  Peter Martinez
//‘******************************************************
//‘***  Purpose of this method was to help output the 
//‘*** contents of the link list after data is inputted.
//‘***  Thie method expects a QSLL parameter so it can 
//‘***  output whats inside. The size of the QSLL can be
//‘***  pretty much as big as it can get.
//‘******************************************************
//‘***  9/20/2018
//‘******************************************************    
    public void recPrintMe(QSLL node)
    {
        String text;
        if(node.nextLL == null)
        {
            System.out.println(" Value = " + node.value);
            text = Integer.toString(node.value);
            jTextArea1.append(text + " ");
        }
        else
        {
            System.out.println(" Value = " + node.value);
            text = Integer.toString(node.value);
            jTextArea1.append(text + " ");
            recPrintMe(node.nextLL);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StackQueueGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StackQueueGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StackQueueGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StackQueueGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StackQueueGUI().setVisible(true);
                
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
